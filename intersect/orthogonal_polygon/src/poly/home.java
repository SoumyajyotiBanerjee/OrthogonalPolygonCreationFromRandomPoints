/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package poly;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import java.io.*;
/**
 *
 * @author abhra
 */
public class home extends javax.swing.JFrame {
    
    static int[][] arr=new int[20][20];
    static int cont=0;
    static int mark=0;
    static int cnt=0;
	private Grids panel;
    /**
     * Creates new form home
     */
    public home() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        sam2 = new javax.swing.JButton();
        Detect = new javax.swing.JButton();
        resolve = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        l1 = new javax.swing.JLabel();
        sam1 = new javax.swing.JButton();
        rand = new javax.swing.JButton();
	panel = new Grids(this);
	this.add(panel);
	panel.setVisible(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(300, 50, 0, 0));
        setResizable(false);

        sam2.setText("Sample 2");
        sam2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sam2ActionPerformed(evt);
            }
        });

        Detect.setText("Detect");
        Detect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetectActionPerformed(evt);
            }
        });

        resolve.setText("Resolve");
        resolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resolveActionPerformed(evt);
            }
        });

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        l1.setText("Program Started");

        sam1.setText("Sample 1");
        sam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sam1ActionPerformed(evt);
            }
        });

        rand.setText("Random point set");
        rand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(sam1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sam2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Detect, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resolve, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(198, 198, 198)
                .addComponent(rand, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(l1)
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sam1)
                    .addComponent(sam2)
                    .addComponent(Detect)
                    .addComponent(resolve)
                    .addComponent(reset))
                .addGap(12, 12, 12)
                .addComponent(rand))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(508, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void gen()
    {
        Random rand = new Random();
	int i,num1,num2,n;
	try{
		FileWriter fstream = new FileWriter("input.txt");
		BufferedWriter out = new BufferedWriter(fstream);
		n=rand.nextInt(90)+10;
		System.out.println(n);
		for(i=0;i<n;i++)
		{
			num1 = rand.nextInt(20);
			num2 = rand.nextInt(20);
			out.write(num1+" "+num2);
			out.write("\n");
		}
		//Close the output stream
		out.close();
		}
		catch (Exception e){//Catch exception if any
			System.err.println("Error: " + e.getMessage());
		}
    }
    public static void Input()
	{
		int x=0,y=0;
		try
		{
  			FileInputStream fstream = new FileInputStream("input.txt");
  			DataInputStream in = new DataInputStream(fstream);
  			BufferedReader br = new BufferedReader(new InputStreamReader(in));
  			String strLine;
  			while ((strLine = br.readLine()) != null)   
			{
  				System.out.println (strLine);
				String [] tokens = strLine.split(" ");
				x=Integer.parseInt(tokens[0]);
				y=Integer.parseInt(tokens[1]);
				arr[x][y]=1;
				cont++;
  			}
  			in.close();
    		}
		catch (Exception e)
		{
  			System.err.println("Error: " + e.getMessage());
  		}
		arr[x][y]=1;
	}
        public static void Input1()
	{
            for(int i=0;i<20;i++)
            {
                for(int j=0;j<20;j++)
                    arr[i][j]=0;
            }
		arr[5][10]=1;arr[5][18]=1;arr[10][14]=1;arr[10][18]=1;arr[15][5]=1;arr[15][14]=1;;arr[18][5]=1;arr[18][10]=1;
        }
        public static void Input2()
	{
            for(int i=0;i<20;i++)
            {
                for(int j=0;j<20;j++)
                    arr[i][j]=0;
            }
		arr[3][14]=1;arr[3][18]=1;arr[6][14]=1;arr[6][7]=1;arr[9][4]=1;arr[9][10]=1;arr[12][4]=1;arr[12][7]=1;arr[15][4]=1;arr[15][18]=1;arr[18][4]=1;arr[18][10]=1;arr[18][9]=1;arr[16][9]=1;arr[16][6]=1;arr[19][6]=1;arr[19][12]=1;arr[18][12]=1;
        }
        public static void Input3(int c)
	{
            for(int i=0;i<20;i++)
            {
                for(int j=0;j<20;j++)
                    arr[i][j]=0;
            }
            if(c==0)
            {
                arr[3][12]=1;arr[3][15]=1;arr[5][15]=1;arr[5][5]=1;arr[7][3]=1;arr[10][14]=1;arr[10][9]=1;arr[6][3]=1;arr[6][8]=1;arr[7][5]=1;arr[8][10]=1;arr[8][12]=1;arr[11][9]=1;arr[11][10]=1;arr[15][4]=1;arr[15][14]=1;arr[17][4]=1;arr[17][8]=1;       
            }
            else if(c==1)
            {
                 arr[4][17]=1;arr[6][17]=1;arr[6][9]=1;arr[4][9]=1;arr[4][10]=1;arr[5][10]=1;arr[5][8]=1;arr[16][8]=1;arr[16][9]=1;arr[8][9]=1;arr[8][11]=1;arr[15][11]=1;arr[15][10]=1;arr[14][10]=1;arr[14][14]=1;arr[10][14]=1;arr[10][12]=1;arr[15][12]=1;arr[15][16]=1;arr[4][16]=1;
            }
            else if(c==2)
            {
                arr[6][1]=1;arr[7][1]=1;arr[4][2]=1;arr[7][2]=1;arr[9][4]=1;arr[12][4]=1;arr[6][6]=1;arr[12][6]=1;arr[14][8]=1;arr[16][8]=1;arr[9][10]=1;arr[16][10]=1;arr[3][11]=1;arr[8][11]=1;arr[17][11]=1;arr[18][11]=1;arr[14][13]=1;arr[18][13]=1;arr[3][14]=1;arr[4][14]=1;arr[7][15]=1;arr[8][15]=1;arr[7][16]=1;arr[14][16]=1;arr[11][17]=1;arr[17][17]=1;arr[11][18]=1;arr[14][18]=1;       
            }
            else if(c==3)
            {
                 arr[7][15]=1;arr[7][11]=1;arr[11][11]=1;arr[11][2]=1;arr[18][2]=1;arr[18][4]=1;arr[16][4]=1;arr[16][3]=1;arr[19][3]=1;arr[19][5]=1;arr[14][5]=1;arr[14][15]=1;
            }
            else if(c==4)
            {
                arr[3][3]=1;arr[3][8]=1;arr[4][4]=1;arr[4][12]=1;arr[7][4]=1;arr[7][8]=1;arr[7][14]=1;arr[7][15]=1;arr[8][3]=1;arr[8][8]=1;arr[8][12]=1;arr[8][15]=1;arr[9][17]=1;arr[9][18]=1;arr[10][14]=1;arr[10][18]=1;arr[13][4]=1;arr[13][10]=1;arr[15][11]=1;arr[15][17]=1;arr[16][4]=1;arr[16][8]=1;arr[16][13]=1;arr[16][14]=1;arr[17][11]=1;arr[17][14]=1;arr[19][10]=1;arr[19][13]=1;
            }
            else if(c==5)
            {
                 arr[3][3]=1;arr[3][9]=1;arr[3][16]=1;arr[3][17]=1;arr[5][12]=1;arr[5][17]=1;arr[7][6]=1;arr[7][12]=1;arr[7][18]=1;arr[7][16]=1;arr[9][6]=1;arr[9][9]=1;arr[9][16]=1;arr[9][18]=1;arr[11][6]=1;arr[11][11]=1;arr[11][13]=1;arr[11][18]=1;arr[13][3]=1;arr[13][11]=1;arr[13][13]=1;arr[13][16]=1;arr[16][6]=1;arr[16][18]=1;
            }
            else if(c==6)
            {
                 arr[5][15]=1;arr[6][15]=1;arr[6][9]=1;arr[9][9]=1;arr[9][8]=1;arr[8][8]=1;arr[8][11]=1;arr[10][11]=1;arr[10][10]=1;arr[9][10]=1;arr[9][12]=1;arr[5][12]=1;
            }
            else if(c==7)
            {
                 arr[4][17]=1;arr[4][18]=1;arr[12][18]=1;arr[12][14]=1;arr[14][14]=1;arr[14][16]=1;arr[10][16]=1;arr[10][12]=1;arr[15][12]=1;arr[15][17]=1;arr[17][17]=1;arr[17][12]=1;arr[18][12]=1;arr[18][8]=1;arr[16][8]=1;arr[16][4]=1;arr[17][4]=1;arr[17][6]=1;arr[15][6]=1;arr[15][2]=1;arr[14][2]=1;arr[14][8]=1;arr[10][8]=1;arr[8][10]=1;arr[8][4]=1;arr[10][4]=1;arr[6][10]=1;arr[6][16]=1;arr[8][16]=1;arr[8][14]=1;arr[7][14]=1;arr[7][17]=1;
            }  
        }
    private void sam2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sam2ActionPerformed

        Input2();
        panel.drawpoly(arr,0);
        l1.setText("Points from sample set have been added");
    }//GEN-LAST:event_sam2ActionPerformed

    private void resolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resolveActionPerformed
        panel.drawpoly(arr,5);
        l1.setText("Self intersection resolved");
    }//GEN-LAST:event_resolveActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        panel.reset();
        for(int i=0;i<20;i++)
        {
            for(int j=0;j<20;j++)
            {
                arr[i][j]=0;
            }
        }
        l1.setText("Program reset");
    }//GEN-LAST:event_resetActionPerformed

    private void DetectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetectActionPerformed
        
     //   cont=s.total;
    //    panel.drawpoly(arr,cont,3);
        panel.drawpoly(arr,1);
        l1.setText("Intersections detected");
    }//GEN-LAST:event_DetectActionPerformed

    private void sam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sam1ActionPerformed
        Input1();
        panel.drawpoly(arr,0);
        l1.setText("Points from sample set have been added");
    }//GEN-LAST:event_sam1ActionPerformed

    private void randActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randActionPerformed
        // TODO add your handling code here:     
        Input3(cnt);
        panel.drawpoly(arr,0);
        cnt=(cnt+1)%8;
    }//GEN-LAST:event_randActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Detect;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel l1;
    private javax.swing.JButton rand;
    private javax.swing.JButton reset;
    private javax.swing.JButton resolve;
    private javax.swing.JButton sam1;
    private javax.swing.JButton sam2;
    // End of variables declaration//GEN-END:variables
}
